Version 1.0:
	Initial board, and player turn set up.
	Might make the board public so as to allow an interface wrapper later.

Version 1.1:
	Single chess file split into 3 files: chess.cpp, board.hpp, board.cpp.
	All three documents doxygen documented.
	Added the fledglings of command options for input.

Version 1.2: 5.23.16
	Specified rules for each piece in chess, excluding 
		en passant and castling.
	Player does not lose turn if they place the wrong turn.

Version 1.2.1: 5.24.16
	Added Piece class which is slated to replace the chars in the 8x8 board array.
		The class contains canMove, what side it's on, etc.
	This change allows additions of metadata without constant parsing of each array index.
	Probably going to set up a feature branch, because after documenting the code: major deletions are due.

Version 1.2.2: 5.25.16
	Fully implemented piece class and removed all previous functionality from board class.
	* b2221db - If I want to go back to funciton pointers, look here, excluding a few bugs, it's as far as I got.
	Immediate needs are documentation on practically all of the classes, and deletion of some of pieces' more 
		useless pieces (haha).

Possible Changes: ------------------------------------------------------------------------------------------
	Add character behavior, so as to disallow invalid movements.
	Allow, en passe and castling, probably not too horribly hard.
	Actually look up in depth chess rules.
	Allow the user admin options to change the board without using their turn.
	Allow a -h option to each piece which will highlight all movement options on the board.
	
